-- First, create the table
DROP TABLE IF EXISTS shots;

CREATE TABLE shots (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  x INTEGER NOT NULL,
  y INTEGER NOT NULL,
  shot_type VARCHAR(10) NOT NULL,  -- 'make' or 'miss'
  game_date DATE NOT NULL,
  season VARCHAR(9) NOT NULL,      -- Format: '2012-2013'
  quarter VARCHAR(10) NOT NULL,    -- '1st Qtr', '2nd Qtr', etc.
  time_remaining VARCHAR(20) NOT NULL,
  shot_description TEXT NOT NULL,
  score_situation TEXT NOT NULL,
  distance INTEGER NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL,
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL
);

-- Then create the timestamp update function
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = TIMEZONE('utc'::text, NOW());
    RETURN NEW;
END;
$$ language 'plpgsql';

-- Create the trigger
DROP TRIGGER IF EXISTS update_shots_updated_at ON shots;
CREATE TRIGGER update_shots_updated_at
    BEFORE UPDATE ON shots
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

-- Finally create the indexes
DROP INDEX IF EXISTS shots_game_date_idx;
DROP INDEX IF EXISTS shots_season_idx;
CREATE INDEX shots_game_date_idx ON shots USING btree (game_date);
CREATE INDEX shots_season_idx ON shots USING btree (season); 